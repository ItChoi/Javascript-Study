##### 인사이드 자바스크립트 1장 - 데이터 타입과 연산자
  - 자바스크립트의 데이터 타입
    - 기본 타입
        - 숫자(Number)
        - 문자열(String)
        - 불린값(Boolean)
        - undefined
        - null 
	- 참조 타입
      - 객체(Object)
        - 배열(Array)
        - 함수(Function)
        - 정규표현식
 
 C나 Java같은 경우 예약어(char,int ...)를 이용해서 변수의 데이터 타입을 지정한다. 반면 JS는 변수를 선언할 때 타입을 미리 지정하지 않고 var 키워드로만 변수를 선언하고, 어떤 형태의 데이터를 저장하느냐에 따라 변수의 타입이 결정되기 때문에 느슨한 타입 체크 언어라고 할 수 있다. 
 
 JS에서는 정수형이 따로 없고 모든 숫자를 실수로 처리하므로 연산을 할 때 주의해야 한다. 정수 값만을 나타내고 싶다면 Math 함수를 이용해야 한다.
 
 JS에서는 한 번 생성된 문자열은 읽기만 가능하고 수정은 불가능하다.
 
    var str = 'test';
    str[0] = 'T'; // 불가능
        
 null 타입 변수를 type로 검사할 경우 null이 아니라 Object로 나오기 때문에 null 타입 변수 체크 시 type 연산자 대신 일치 연산자(===)를 사용해야 한다
 

 - 객체 생성 방법
    - JS는 객체 리터럴이나 생성자 함수 등 별도의 생성 방식이 존재한다. 크게 세 가지 방식이 존재 한다.
       1. 기본 제공 Object() 객체 생성자 함수를 이용하는 방법
       2. 객체 리터럴을 이용하는 방법 (리터럴: 표기법이라 생각하면 된다. 따라서 객체 리터럴이란 객체를 생성하는 표기법을 의미한다.) - 객체 리터럴은 중괄호 {}를 이용해서 객체를 생성한다.
       3. 생성자 함수를 이용하는 방법 - 객체 프로퍼티 접근 방법 (생성자 함수는 4장에서..)
       
 - 객체 프로퍼티 읽기/쓰기/갱신
    - 객체 프로퍼티에 접근하기 위해서 2가지 방식을 사용한다.
       1. 대괄호 ([]) 표기법
          - 마침표 표기법으로 접근하지 못하고, 대괄호 표기법으로만 접근이 가능한 경우가 있다. 접근하려는 프로퍼티가 표현식이거나 예약어일 경우다. 예를 들어 'full-name' 프로퍼티의 경우 '-'연산자가 있는 표현식이기 때문에 대괄호 표기법으로만 접근 가능하다.
       2. 마침표 (.) 표기법
 - NaN (Not a Number) 값 : 1 - 'hello' 연사의 결과는 NaN
 - for in 문과 객체 프로퍼티 출력
    - for in 문을 사용하여 객체에 포함된 모든 프로퍼티에 대해 루프를 수행할 수 있다. for in 문이 수행되면서 변수에 객체의 프로퍼티가 하나씩 할당된다.
    
 - 객체 프로퍼티 삭제
    - JS에서 객체 프로퍼티를 delete 연산자를 이용해 즉시 삭제할 수 있다. 여기서 주의할 점은 delete 연산자는 객체의 프로퍼티를 삭제할 뿐 객체 자체를 삭제하지 못한다.
    
 - 객체 비교
    - 동등 연산자(==)를 사용하여 두 객체를 비교할 때도 객체의 프로퍼티 값이 아닌 참조 값을 비교한다는 것에 주의해야 한다. 따라서 기본 타입의 경우 ==를 사용하여 비교 가능하지만, 객체의 비교에서는 주의해야 한다.
    
 - 참조에 의한 함수 호출 방식
    - 기본 타입과 참조 타입의 경우 함수 호출 방식이 다르다.
       - 기본 타입의 경우는 값에 의한 호출(Call By Value) 방식으로 동작한다. 즉 함수 호출 시 인자로 기본 타입의 값을 넘길 경우 호출된 함수의 매개변수로 복사된 값이 전달된다. 따라서 함수 내부에서 매개변수의 값을 변경해도 기본 타입의 변수 값은 변하지 않는다.
       - 참조 타입의 경우는 함수 호출 시  참조에 의한 호출(Call By Reference) 방식으로 동작한다. 따라서 함수 호출 시 객체를 전달할 경우 매개 변수로 객체의 참조 값이 그대로 함수 내부로 전달되기 때문에 객체의 값이 변경될 수 있다. 
       
 - 프로토 타입
    - ㅁㄴㅇ
 
    